{"ast":null,"code":"var _jsxFileName = \"/home/dana/my401/lab26/resty/src/app.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './app.scss';\nimport axios from 'axios';\nimport { useState, useEffect, useReducer } from 'react';\nimport Header from './components/header/header';\nimport Footer from './components/footer/footer';\nimport Form from './components/form/form';\nimport History from './components/history/history';\nimport Results from './components/results/results';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialState = [];\n\nfunction reducer(history = initialState, action) {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case 'AddToHistory':\n      console.log(history);\n      history = [...history, payload];\n      return history;\n\n    default:\n      return history;\n  }\n}\n\nfunction addToHistory(url, method, result) {\n  return {\n    type: 'AddToHistory',\n    payload: {\n      url,\n      method,\n      result\n    }\n  };\n}\n\nfunction App() {\n  _s();\n\n  const [history, dispatch] = useReducer(reducer, initialState);\n  const [data, setData] = useState(null);\n  const [requestParams, setRequestParams] = useState({});\n  const [requestBody, setRequestBody] = useState({});\n  useEffect(async () => {\n    setData(null);\n\n    if (requestBody) {\n      const result = await axios[requestParams.method](requestParams.url, JSON.parse(requestBody));\n      const data = {\n        headers: result.headers,\n        count: result.data.count,\n        results: result.data.results\n      };\n      setData(data);\n      dispatch(addToHistory(requestParams.url, requestParams.method, data));\n    } else {\n      const result = await axios[requestParams.method](requestParams.url);\n      const data = {\n        headers: result.headers,\n        count: result.data.count,\n        results: result.data.results\n      };\n      setData(data);\n      dispatch(addToHistory(requestParams.url, requestParams.method, data));\n    }\n  }, [requestParams]);\n\n  function callApi(requestParams, requestBody) {\n    // mock output\n    setRequestParams(requestParams);\n    setRequestBody(requestBody);\n  }\n\n  function historyfunc(result) {\n    setData(result);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Request Method: \", requestParams.method]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"URL: \", requestParams.url]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      handleApiCall: callApi\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), history && /*#__PURE__*/_jsxDEV(History, {\n      historyfunc: historyfunc,\n      history: history\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Results, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"ESzvVBDs8VCEbdKK6mtiJ845bwA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/dana/my401/lab26/resty/src/app.js"],"names":["React","axios","useState","useEffect","useReducer","Header","Footer","Form","History","Results","initialState","reducer","history","action","type","payload","console","log","addToHistory","url","method","result","App","dispatch","data","setData","requestParams","setRequestParams","requestBody","setRequestBody","JSON","parse","headers","count","results","callApi","historyfunc"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,EAA6BC,UAA7B,QAA+C,OAA/C;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,OAAP,MAAoB,8BAApB;AAEA,OAAOC,OAAP,MAAoB,8BAApB;;;AAEA,MAAMC,YAAY,GAAC,EAAnB;;AAEA,SAASC,OAAT,CAAiBC,OAAO,GAACF,YAAzB,EAAsCG,MAAtC,EAA6C;AAC3C,QAAM;AAACC,IAAAA,IAAD;AAAMC,IAAAA;AAAN,MAAeF,MAArB;;AACA,UAAQC,IAAR;AACE,SAAK,cAAL;AACEE,MAAAA,OAAO,CAACC,GAAR,CAAYL,OAAZ;AACAA,MAAAA,OAAO,GAAC,CAAC,GAAGA,OAAJ,EAAYG,OAAZ,CAAR;AACA,aAAOH,OAAP;;AACF;AACE,aAAOA,OAAP;AANJ;AAQD;;AACD,SAASM,YAAT,CAAsBC,GAAtB,EAA0BC,MAA1B,EAAiCC,MAAjC,EAAwC;AAEtC,SAAO;AACLP,IAAAA,IAAI,EAAC,cADA;AAELC,IAAAA,OAAO,EAAC;AACNI,MAAAA,GADM;AAENC,MAAAA,MAFM;AAGNC,MAAAA;AAHM;AAFH,GAAP;AAQD;;AACD,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACV,OAAD,EAAUW,QAAV,IAAsBnB,UAAU,CAACO,OAAD,EAAUD,YAAV,CAAtC;AACA,QAAM,CAACc,IAAD,EAAOC,OAAP,IAAkBvB,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACwB,aAAD,EAAgBC,gBAAhB,IAAoCzB,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAAC0B,WAAD,EAAcC,cAAd,IAAgC3B,QAAQ,CAAC,EAAD,CAA9C;AAGAC,EAAAA,SAAS,CAAC,YAAY;AACpBsB,IAAAA,OAAO,CAAC,IAAD,CAAP;;AACA,QAAIG,WAAJ,EAAiB;AACf,YAAMP,MAAM,GAAG,MAAMpB,KAAK,CAACyB,aAAa,CAACN,MAAf,CAAL,CAA4BM,aAAa,CAACP,GAA1C,EAA+CW,IAAI,CAACC,KAAL,CAAWH,WAAX,CAA/C,CAArB;AACA,YAAMJ,IAAI,GAAG;AAAEQ,QAAAA,OAAO,EAAEX,MAAM,CAACW,OAAlB;AAA2BC,QAAAA,KAAK,EAAEZ,MAAM,CAACG,IAAP,CAAYS,KAA9C;AAAqDC,QAAAA,OAAO,EAAEb,MAAM,CAACG,IAAP,CAAYU;AAA1E,OAAb;AACAT,MAAAA,OAAO,CAACD,IAAD,CAAP;AACAD,MAAAA,QAAQ,CAACL,YAAY,CAACQ,aAAa,CAACP,GAAf,EAAmBO,aAAa,CAACN,MAAjC,EAAwCI,IAAxC,CAAb,CAAR;AACD,KALD,MAKO;AACL,YAAMH,MAAM,GAAG,MAAMpB,KAAK,CAACyB,aAAa,CAACN,MAAf,CAAL,CAA4BM,aAAa,CAACP,GAA1C,CAArB;AACA,YAAMK,IAAI,GAAG;AAAEQ,QAAAA,OAAO,EAAEX,MAAM,CAACW,OAAlB;AAA2BC,QAAAA,KAAK,EAAEZ,MAAM,CAACG,IAAP,CAAYS,KAA9C;AAAqDC,QAAAA,OAAO,EAAEb,MAAM,CAACG,IAAP,CAAYU;AAA1E,OAAb;AACAT,MAAAA,OAAO,CAACD,IAAD,CAAP;AACAD,MAAAA,QAAQ,CAACL,YAAY,CAACQ,aAAa,CAACP,GAAf,EAAmBO,aAAa,CAACN,MAAjC,EAAwCI,IAAxC,CAAb,CAAR;AAED;AACF,GAdQ,EAcN,CAACE,aAAD,CAdM,CAAT;;AAgBA,WAASS,OAAT,CAAiBT,aAAjB,EAAgCE,WAAhC,EAA6C;AAC3C;AACAD,IAAAA,gBAAgB,CAACD,aAAD,CAAhB;AACAG,IAAAA,cAAc,CAACD,WAAD,CAAd;AACD;;AACD,WAASQ,WAAT,CAAqBf,MAArB,EAA4B;AAC1BI,IAAAA,OAAO,CAACJ,MAAD,CAAP;AACD;;AACD,sBACE;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,qCAAsBK,aAAa,CAACN,MAApC;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,0BAAWM,aAAa,CAACP,GAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,IAAD;AAAM,MAAA,aAAa,EAAEgB;AAArB;AAAA;AAAA;AAAA;AAAA,YAJF,EAKGvB,OAAO,iBAAE,QAAC,OAAD;AAAS,MAAA,WAAW,EAAEwB,WAAtB;AAAmC,MAAA,OAAO,EAAExB;AAA5C;AAAA;AAAA;AAAA;AAAA,YALZ,eAME,QAAC,OAAD;AAAS,MAAA,IAAI,EAAEY;AAAf;AAAA;AAAA;AAAA;AAAA,YANF,eAOE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA,kBADF;AAWD;;GA1CQF,G;;KAAAA,G;AA2CT,eAAeA,GAAf","sourcesContent":["import React from 'react';\nimport './app.scss';\nimport axios from 'axios';\nimport { useState, useEffect,useReducer } from 'react';\nimport Header from './components/header/header';\nimport Footer from './components/footer/footer';\nimport Form from './components/form/form';\nimport History from './components/history/history';\n\nimport Results from './components/results/results';\n\nconst initialState=[];\n\nfunction reducer(history=initialState,action){\n  const {type,payload}=action;\n  switch (type) {\n    case 'AddToHistory':\n      console.log(history);\n      history=[...history,payload];\n      return history;\n    default:\n      return history;\n  }\n}\nfunction addToHistory(url,method,result){\n\n  return({\n    type:'AddToHistory',\n    payload:{\n      url,\n      method,\n      result\n    }\n  })\n}\nfunction App() {\n  const [history, dispatch] = useReducer(reducer, initialState)\n  const [data, setData] = useState(null);\n  const [requestParams, setRequestParams] = useState({});\n  const [requestBody, setRequestBody] = useState({});\n\n\n  useEffect(async () => {\n    setData(null);\n    if (requestBody) {\n      const result = await axios[requestParams.method](requestParams.url, JSON.parse(requestBody));\n      const data = { headers: result.headers, count: result.data.count, results: result.data.results }\n      setData(data);\n      dispatch(addToHistory(requestParams.url,requestParams.method,data));\n    } else {\n      const result = await axios[requestParams.method](requestParams.url);\n      const data = { headers: result.headers, count: result.data.count, results: result.data.results }\n      setData(data);\n      dispatch(addToHistory(requestParams.url,requestParams.method,data));\n \n    }\n  }, [requestParams]);\n\n  function callApi(requestParams, requestBody) {\n    // mock output\n    setRequestParams(requestParams);\n    setRequestBody(requestBody);\n  }\n  function historyfunc(result){\n    setData(result);\n  }\n  return (\n    <>\n      <Header />\n      <div>Request Method: {requestParams.method}</div>\n      <div>URL: {requestParams.url}</div>\n      <Form handleApiCall={callApi} />\n      {history&&<History historyfunc={historyfunc} history={history} />}\n      <Results data={data} />\n      <Footer />\n    </>\n  )\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}